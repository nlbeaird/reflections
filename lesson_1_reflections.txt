How did viewing  diff between two files help you see the bug that was introduced?

Well, first it reduced the number of lines presented
Second, it aligned changes so I could compare
And it highlighted those changes


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I might spend less time manually saving versions.
I can look back at what I've tried in the past.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pros:
Makes you think logically about what you are doing
Makes a log of changes have logical or cohesive step sizes

cons:
You could commit to little or too much and make a mess

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

git is probably more used to dealing with interrelated files of code.

google docs doesn't know anything about how files are related. You provide that information to git (I think by defineing a repository)

How can you use the commands git log and git diff to view the history of files?

git log will give the list of commits, and then you can select some and use git diff to look at the changes

How might using version control make you more confident to make changes that could break something?

if you know you can always go back and run the code that worked before, then its ok to try something that might break it

Now that you have your workspace set up, what do you want to try using Git for?

Everything. All the code projects. But I still am not sure how?
